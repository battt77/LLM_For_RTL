You are a Verilog expert, and I need your help to write a Verilog code for an Immediate Value Generator (IMM) module. Below are the detailed requirements:

Module Name: imm

Input Ports:
- immin: 25-bit input representing the immediate value from the instruction (bits [31:7]).
- ExtOP: 3-bit input selection signal to choose the type of immediate value to generate.

Output Ports:
- immout: 32-bit output representing the generated immediate value.

Function Description:
This module generates different types of immediate values based on the selection signal `ExtOP`. The types of immediate values include I-type, U-type, S-type, B-type, and J-type. The module uses the `MuxKeyWithDefault` pre-defined module to implement a multiplexer with a default value. The `MuxKeyWithDefault` module has the following parameters:
1. The first parameter is the output width.
2. The second parameter is the width of the selection signal.
3. The third parameter is the default value.
4. The fourth parameter is the width of the input signals.

The types of immediate values to be generated and their corresponding selection signals are as follows:
- 3'b000: I-type immediate
- 3'b001: U-type immediate
- 3'b010: S-type immediate
- 3'b011: B-type immediate
- 3'b100: J-type immediate

Please note the following when implementing the IMM module:

1. **I-type Immediate**:
   - The I-type immediate is generated by sign-extending the bits [31:20] of the input `immin`.
   - The logic for generating the I-type immediate is as follows:
     ```verilog
     wire [31:0] immI = {{20{immin[31]}}, immin[31:20]};
     ```

2. **U-type Immediate**:
   - The U-type immediate is generated by concatenating the bits [31:12] of the input `immin` with 12 zeros.
   - The logic for generating the U-type immediate is as follows:
     ```verilog
     wire [31:0] immU = {immin[31:12], 12'b0};
     ```

3. **S-type Immediate**:
   - The S-type immediate is generated by sign-extending the bits [31:25] and [11:7] of the input `immin`.
   - The logic for generating the S-type immediate is as follows:
     ```verilog
     wire [31:0] immS = {{20{immin[31]}}, immin[31:25], immin[11:7]};
     ```

4. **B-type Immediate**:
   - The B-type immediate is generated by sign-extending the bits [31], [7], [30:25], and [11:8] of the input `immin`, and appending a zero at the least significant bit.
   - The logic for generating the B-type immediate is as follows:
     ```verilog
     wire [31:0] immB = {{20{immin[31]}}, immin[7], immin[30:25], immin[11:8], 1'b0};
     ```

5. **J-type Immediate**:
   - The J-type immediate is generated by sign-extending the bits [31], [19:12], [20], and [30:21] of the input `immin`, and appending a zero at the least significant bit.
   - The logic for generating the J-type immediate is as follows:
     ```verilog
     wire [31:0] immJ = {{12{immin[31]}}, immin[19:12], immin[20], immin[30:21], 1'b0};
     ```

6. **Multiplexer Implementation**:
   - Use the `MuxKeyWithDefault` module to select the appropriate immediate value based on the `ExtOP` signal:
     ```verilog
     MuxKeyWithDefault #(5, 3, 32) immtype (immout, ExtOP, 32'b0, {
         3'b000, immI,
         3'b001, immU,
         3'b010, immS,
         3'b011, immB,
         3'b100, immJ
     });
     ```

Please write a functionally equivalent `imm` module based on the requirements above.